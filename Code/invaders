public class Invaders {
  int rows = 6;
  int cols = 12;
  int[][] invaders;
  float left = (width-(cols*45))/2 + 5;
  int top = 60;
  float invader_speed = 15;
  int type;
  PImage image0 = loadImage("sprites/inv_0.png"); 
  PImage image1 = loadImage("sprites/inv_1.png");
  PImage image2 = loadImage("sprites/inv_2.png"); 
  PImage image3 = loadImage("sprites/inv_3.png");
  PImage image4 = loadImage("sprites/inv_4.png"); 
  PImage image5 = loadImage("sprites/inv_5.png");
  PImage image6 = loadImage("sprites/inv_6.png"); 
  PImage image7 = loadImage("sprites/inv_7.png");
  PImage image8 = loadImage("sprites/inv_8.png"); 
  PImage image9 = loadImage("sprites/inv_9.png");
  PImage image10 = loadImage("sprites/inv_10.png"); 
  PImage image11 = loadImage("sprites/inv_11.png");
  boolean reverse = false;
  ArrayList<BoundaryBox> boundaryBoxes;


  Invaders() {
    invaders = new int[rows][cols];
    boundaryBoxes = new ArrayList<BoundaryBox>();
  }

  void createInvaders() {
    int wd = 0;
    int ht = 0;
    for (int i = 0; i < rows; i++) {
      for (int j = 0; j < cols; j++) {
        invaders[i][j] = i;
        if (i == 0 || i == 1) {
          wd = 30;
          ht = 30;
        } else if (i == 2 || i == 3) {
          wd = 40;
          ht = 30;
        } else if (i == 4 || i == 5) {
          wd = 43;
          ht = 35;
        }
        boundaryBoxes.add(new BoundaryBox(i, j, left + 45*j, top - (i*10) + 50*i, wd, ht));
      }
    }
  }

  void display() {
    for (int i = 0; i < rows; i++) {
      for (int j = 0; j <cols; j++) {
        if (invaders[i][j] >= 0) {
          type = invaders[i][j]; // value at array index determines which image to draw
          if (type == 0) {
            int wd = 30;
            int ht = 30;
            image(image0, left + 45*j, top - (i*10) + 50*i, wd, ht);
          } else if (type == 1) {
            int wd = 30;
            int ht = 30;
            image(image1, left + 45*j, top - (i*10) + 50*i, wd, ht);
          } else if (type == 2) {
            int wd = 40;
            int ht = 30;
            image(image2, left + 45*j, top - (i*10) + 50*i, wd, ht);
          } else if (type == 3) {
            int wd = 40;
            int ht = 30;
            image(image3, left + 45*j, top - (i*10) + 50*i, wd, ht);
          } else if (type == 4) {
            int wd = 43;
            int ht = 35;
            image(image4, left + 44*j, top - (i*10) + 50*i, wd, ht);
          } else if (type == 5) {
            int wd = 43;
            int ht = 35;
            image(image5, left + 44*j, (top - 50) + 50*i, wd, ht);
          }
        }
      }
    }

    for (int i = 0; i < boundaryBoxes.size(); i++) {
      BoundaryBox box = boundaryBoxes.get(i);
      if (box.collision()) {
        invaders[box.row][box.col] = -1;
        boundaryBoxes.remove(i);
      }
    }
  }

  void move() {
    if (left < 0) {
      reverse = false;
      top += 10;
    } else if (left + cols*45 > width) {
      reverse = true;
      top += 10;
    }
    if (reverse == false) {
      left += invader_speed;
    } else if (reverse == true) {
      left -= invader_speed;
    }
  }
}
